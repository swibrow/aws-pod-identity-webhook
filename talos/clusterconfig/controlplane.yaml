version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: tym5v0.59cpzpdigk5y7kfc # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBc0tEbVZ5Z2dZQUI2ZmpYaXhpTzlXVEFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXdOakE1TVRjME1qRTNXaGNOTXpRd05qQTNNVGMwTWpFM1dqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUtIQm1xcUExVVAzelIveDdHZzJtNlNOOHBWTjRJdkRzY2lrCnUyZWo1bGVGbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5nc0o5aFllcGQ1dkJwcwpSbDNCcU0xRElmUE1NQVVHQXl0bGNBTkJBSGE0LytaQzhQS2YrblpHYkhmclZnK0lYdTBkZDk4ZzJ6L1hKWlZTCnhtTXZGalJ1Q2NBNmdtd3diTCtnK0p1REcyTFN0elMxVmJYZXAveGkvdkQ3NGdjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJUDJFRXF2NTZPeHRpdS9jMVo2dVZBTkN4ejF6K1JyRk1NMUtjRGFwQVQxQgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.30.1 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #
    #       # # Picks a network device using the selector.

    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.

    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.

    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true

    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

    #       # # Wireguard specific configuration.

    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24

    #       # # Virtual (shared) IP address configuration.

    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1

    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld

    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.

    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.7.4 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.

        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.

        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system

    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Configures the node labels for the machine.

    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: U8Vyb8rLuv339X0c8zSrwxbaWpiOBHi0JVNUZg0tPsk= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: tipPdBwC800vjoF5VjawdO2hMmNbc3pNewEQhOoiY/E= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://192.168.0.191:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: sitower # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12

        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: nvf0cs.6msfif7kcaprg1g3 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: sV0AtRXijZa4eZjsXImt9Jn5Gc22CzhCfESmeWT1VRQ= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVMrZ0F3SUJBZ0lRQnVxR09lOVZQNGdVVW9aRXp3THkrakFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNRFl3T1RFM05ESXhOMW9YRFRNME1EWXdOekUzTkRJeApOMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCTDBTTXkvWFFXdDRUMTd4MmFIMFowM3hBR2NSTFJvTlhsVmtxWDhGeEUraXA5UUxKOTdFeDV6NzM4MGoKeHBQTHpJYlI5Mzl6ZExXTWdCUm5tU0ZIWXQyallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVNK1hMNWlhaDR1YmVHUllRWGptMExaOHcySmt3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnR0JrRlJsQngKTHJ3SGpkcU1tbk1Ub0Q5VkE2c0hNRGJ4RWs0RDEySnVVZDBDSUZBd1hYNDl1UHBlemZhVnA5RW50N2dnamtrMgpJNzNUN3JRemUvTGFKeXE2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlvVUJhb0VtVkhQZXB4c2N1dEZQN0sxazJndEhhWEJHdkMzbWVuRGptb25vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdlJJekw5ZEJhM2hQWHZIWm9mUm5UZkVBWnhFdEdnMWVWV1NwZndYRVQ2S24xQXNuM3NUSApuUHZmelNQR2s4dk1odEgzZjNOMHRZeUFGR2VaSVVkaTNRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQUxiK2ZiK0RPYXNVTXhsZEN6TmZLRFF3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5EQTJNRGt4TnpReU1UZGFGdzB6TkRBMk1EY3hOelF5TVRkYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVQ2WkdMM1VBZ016Unc4RTE0cGtjbm5Ibmtva0tEaGYwbDgxMUFnM1RMY2tjYUhENGViCkd1NjZqSGlCbEpOcnRnb1l3KzBneFdDL3N0NXhwS1Zob0Q3T28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGQ1FPYTBlTEZ4MGtVQkF3d3dQUk83YVdiWFJ3TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklDS0VDeGpUTWlpTTRxT2g4NGg0UUNjczdTSmNMWHZGVlRDSzVLZE9wNVoxQWlFQTEwWnJhV1RvRUFVS2dNL2UKMkJUL2JUbHVack5xdXNpNWpINEtJL2NyVGxnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlJSmFuZ1VFeWVxb1FOUFByaGhSUnpuSmtIb2ZONGJiRHFIcktmaHBoK05vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFK21SaTkxQUlETTBjUEJOZUtaSEo1eDU1S0pDZzRYOUpmTmRRSU4weTNKSEdodytIbXhydQp1b3g0Z1pTVGE3WUtHTVB0SU1WZ3Y3TGVjYVNsWWFBK3pnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBMkp2Y0FlZzJKczcwenFMWHkxWlRTTDdGY3FFcTFTUE1jOUNnRWY1WXNHVWRXYStsCjZGMmdCVDJGK3RTcVlQbHdSQ0NiMlZHaXdQSlk5VytEK0x2aGkxakdlTGhUNHdoK0p1QUhuZzloM2dKMHRETysKcmtiZXdTSWVnR1JHTW8xTENCOW9FNFhaOFhCWkpZcVNYRU41anNWQlpaMFJLeWo3R1BDOFFlM0VlRnkvU1F3TAptR25KakxuNC9RcjdtV0JGdGRISFlYMWtiVzdOK29sME85QTBISG01U2lKczg2YjBEZ2RzZitTN21lMEdDejVaCmtaOERvdXBWbjRrNWxDaGtpRENScEZpSjJsU1FUVUxLeTdoWVBEWWVuM2ZYcis0UEFWck5leDMvMS9UcjZRdGMKVVFUVDIrczNFbXVRYWlXK1E5OEhGb3JjT00zWU8wenRBNWxRc3k0RGdVanNGdHhXTi9RL0RicE9Nb21lZnFrNApGdk5lMXJ1YzZRSUZUaUlMME93TGorY3FVTG1jRkdrZ2dIQ05PS01LZlhjWjM5alp0cjgza1R0T0VVTWRrbit4Ckw3YnNOblBhbE9jY3pDOXpLZnI2aDhTdXhxUzdGbXh6VzJCbG9ZcDhzdkJHMHpvZjVuZmZKRGh3TTlhRnRFOUUKUEswWDZ0Um5jVVFhRFhOd1VNeWEyUTF1T3doVjVpV1ZrL3NkNC9BMGYxeE1LUTNXdFJISDFwL0xBMjhKQmEweQpMZWU2UXBsNEZ2YlVUSVc1d0EyVStzdFB0L3dyWlFIV3NxRWkrdVJqazJ0RmdkSFlkVWpoN2JBM2x5SmF4NnBVClVWWDJheDhKN2xSbFVIYTJLUytsaUI0Y0RjUzRwRG92c2w1T1ZaMkViVEJhYW11aWhaMG5tdDN5V2EwQ0F3RUEKQVFLQ0FnQnVaUmorMjlObGVncW9tYlB6alA2TFQ3Y2YwZVlibE5BcG9vVkNSbWY3RnIyYnJQcVliOGNUaEtTWgpEdlA2MG9ZV0lxeHJXTURqSjJDUlRoRnJubzIzMERudTRycldOY2pkbFVZc2wxaGdwczNGM2Excjh2Q3FhL0l4CnEybGZjRVZ5VVZkZ3c5SXN5LzZUTkltZGZrSWdzb1crL1FyMy9UM2tHeVZIVUovV1hDYWRXd2M1MllpQU1YUWwKdXdnNXhpZ2hIMVpIYUhuYmtDSm9jcytMZ0hSZW91YjlVb2hHc2FzbXp6L0wrczVtQjdnUjJPZ2JZSGlnK2w5RApITlA4bjQyRkg0UEt4OWtTTGhFUlgxNHQ3N2tBanZDU2c2aW9vR0tEWlR6ZVo0NnlDTUNIR0dRbllwZDdPT2pyCmVXaXp3S0swd3FGQkt1cE1CUlVVUEFONzF4S2FIMnI1T2dvVTlYeForMk9IOVlKcGRXaE5SbWxSRDRhdXJJblYKaVBDVkgzRnhKNzhWMWEzR25sZHc5S1UrRlRLQno2eDZFUUNsVkNrY3I0ME96a0E1TTJBY3ZLeHRaUGZqQ2RHcwp6MWlzTURDVWdBTldjdVluam80eTgrQTJuVmpaT3h0NFdpNWN6YTBoWE5MWlhHNlVJbUFGZkJBWVFlYjV0VUdzCnZCOVA3WWV0RWxHQmN3MWVOdkJZVE9nNGU3ZFJNRnJSaU9jLzNZRFByTVZjYXhIZ1dPdXdPZXVOc1JEYjQ2VDcKbzV5aTVnVU9nZWdDeWhuNXJEQlpqRVRRM3M4eDBnazRTUlNxUTJITHMrTTErTlVvdUR5Ym9QbSt4d2t1SUs0dQpTbUxYc3BJcHB0V1BwUlZJdXRsNnNJOElQWng3ZTFnYU5ZV1pBWE1yQ0lYUmV2dkgzUUtDQVFFQTZkMVFPMHRZCjZWOGNsenp2QTUwZU1aZ0pJNWxOUU9XREpOMm9Gc3dsYktHOWxLdE90ZU9OWUtoN08wLy8rdGFDR0JaY202eGUKUlV0L3dpMC96TEdadFFHakpxWk1XTDJDS0h5MmlKRUs2aHZmVDlBSGUwcEdaWHpoVTlXRHllS01SWjVaSjc1Rwp6Vi8zMkVWQVMrY1ZpTDRYbEJRVU82K21rUHhXZzlGNjh1VUdPQktYbDk2WmtlSzMvenJVbGFYWjRBdm9PQjBmCnFwUkcwbDg4QzhYb21NNFE5QzNNbzVaamdDRFJLZld1MnN0MzRnOS9EcExFQXpRRUFKUkgxc1VkRjM4dlgyYVMKZlBCekRwZHp0cThtUzR3WC8zZkI4Q1Uvd1pWVWVXa0JuZjh4T3krR2gxWno3WE5EOEs4bXZmc0hBbGdKbGthTQpWYnc1aTl0a2ZLUTBHd0tDQVFFQTdSeHVDZ0lHMlZGU1NlZVJVODlXdytsbjFlQzB4RXUweTVicVFqeWRmZFhOClp0OGtoMzhuMzVXdEQxTGtMNmY5Vm4wQ2RNK09DRmZJZWpuQUpuVTZzZUpqdEE1M2lLb09SUC90ck0rOSs5OFYKdjY5YVhtODhRQmFFWEhuc1BVT0VkdzYvaGhld2srS0hjK2VQYzdhOWpsSWdCYjVNM1V3L21nSWY3UmpjV2FoagplMlZvUXBBeUltUEQ1MFdxM1NLbWh3eWZxcFRVYzRxUE1WSXkvMldCUmczaFY2UmUxdWI4U2ZyOW1ML1E5ZlZXCk9oUnpWQmpuc1YxczRVdkNVRWwxZG1uNHpaN2hhYVZUMFc4eXFDSzJ6Z09FcWxwVDdsWWZpamFrVWhqK3o2L2sKZ0tvNllLVnBabzVlUFl3NFN5VWE1elUwNDlXQmJnUXZUREZCcmRNMTF3S0NBUUVBeCtIZWh5OVpLTzJmOUN1aQpaY1pPWGprQjVxbEtmQ011T2I0eHducHRxakY3WmF3ZE5CenZZeVBkWDg1NmpSdjJTVHdqbnZKdUNIQUZIQ09zCm1mbFoxSGszeHZydjJoRHZSRWVEZzZua1dEL0dWK01INGZxVHZINUY0RzlubW8vRk1HT3M4K2tQZnMxOWVoMkcKWE5sL2NFWjR4Smw4eVo3UmtLMzhDK0pwWVYwYU9hYTZacFZkVUhFa3JrTE1HN09MU3BFaXc0TXc0NHlrRTM1TwpSZ203U1k4bXNtektzUzhDa0NwOFc0NmZDbVpKYXErdit2YTZEYnJSaU9Vem1YOFQ1RmRTV0FuRlBvQU05dlcvCmN1NjBubkY0dVdMVUliclVpVkpteHZaVzZZR0p4SHBVVXl3ekhVb2RVWU9DYTNJNGhXcFZsMWxvN0laWjhRMXQKRDVNUTdRS0NBUUVBbTJHTkRzdmpOeGhlaDRYVHE0dHMvWGVBRHgxdytFM3dUWlk1TDJ6UGZEM1dtN3BSRXVZVgorQ1A2dzliN0ordTdUYWtnS2ZJMXptdlFPYUNNdGVjT3JyRi95dWZNRjJmeGIvQVREYk1aZWV2b01iUTAwVHV0CnpRVzBlWEdBaVdrc2JtVGd4M3ZRd0NpcndSMlcyU3FBcjdwTHQ5Zk1RUjBOZE53OWxiODc3eGsxRUJFVk1NR1QKeVF0OXZwbmQ3WW9lZk5PZDhrZ1RyUis0MUlaY1d4ZG1qc1RiemZZdUhFQkVSaXJQY3dFSWE1WDVpcGdLTjZzVwpjaG1hRjAzeEtYSHFJczR4T0hZTW01RzNDc0VHL2oyNWMrbkVUMnBnSkFpV0pKbklOdkNnVXZPZUYxNzJZSTBsCk5Bcko0U1Y1WW0wUFkwSnZ4WG9ObGszeHZNbHVrLzJjQXdLQ0FRQVgwV2VyNHdhYTJyM3lhZFU3RXVDbWJqUjIKZ1lIbnB1SnhoaTJTTWEzUk9iejNLRHo2ejJpTHNuWnptV0V3R1VrUU1LRGNzS0lFMWxvR2RjMEw5bWJ1Q1RKRgp1V2phVmE1SjdtNG1Md0pPbUNWakFiSDVTam9pUUxMdmlZVEp5Z3ZsS1Nmd1laNWtoaEMwZzlwcGFsK2NrNk1LCnVOM3lTR2N5bmpZSHUvNnd3akZGdzUyVEdYMlJZZUZ3QmxtOXhMTG8vWkI0RysyaTNqRmhoSzRaQlNqNTRBTHgKTkpwOW1tVFpqb3NJUXFubmM0SW1xOElCb1BxNHZCWlo5b2VUYnVkV3F6S2pzYUZyZU5JbUp1anlINmVhNDFtOQpLVXVPWG1qQjhEWkxmQVdIV0hiekdsa25ZNUhoVUdzWXJXVGJMMDd0cEJ2TEwyaHJUdHFXSWtNc1l3VjkKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.30.1 # The container image used in the API server manifest.
        # Extra arguments to supply to the API server.
        extraArgs:
            service-account-issuer: https://raw.githubusercontent.com/swibrow/aws-pod-identity-webhook/main
            service-account-jwks-uri: https://192.168.0.191:6443/openid/v1/jwks
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.0.191
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.30.1 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.30.1 # The container image used in the kube-proxy manifest.

        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.30.1 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQVB6ZHBza1lyZVBtQ0RXRHFIMFNTSXN3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBMk1Ea3hOelF5TVRkYUZ3MHpOREEyTURjeE56UXlNVGRhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTRExScXNlVG9aCi9POVltcHdpUW1TZGJiOVVyZXFJanRGb0dqZFNrZWdDWVNjYUljQVlzc2Evd0V1SmVZMWtoYjgwZjFrQTZqMEEKSHdXTTZBVDJnWGFVbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNibHFtVk0zd040CjFHUStrOGFibG5EZi9YN0lNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNGTUVnVXcrOHNmNXVzMVVpeGxYTUUKQTExUEhOUVVQOFZSb2kzN0Rpa1VlZ0lnUVJzUXBzWXY0T2lJL1pSamhBUkZsUUcxSlI2ZUpSY3hHTEZ1VlRPTgpraWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUI5N1NzV1EyQ1BWRUJWdWlJYjRjdlMzUnNNT005ckErUEVMUzNUYmQ5Z0NvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZ3kwYXJIazZHZnp2V0pxY0lrSmtuVzIvVkszcWlJN1JhQm8zVXBIb0FtRW5HaUhBR0xMRwp2OEJMaVhtTlpJVy9OSDlaQU9vOUFCOEZqT2dFOW9GMmxBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.13

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    allowSchedulingOnControlPlanes: true # Allows running workload on control-plane nodes.

    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
